#!/bin/bash

# 初始化msql
# 安装系统依赖环境
# 安装python项目的第三方包
# 通过django的migrate初始化数据库表到mysql
# 开始项目所需的服务，写入开机启动中

# 检查函数库文件
if [ -e ./init_function ]
then
    source ~/.bash_profile
    source ./init_function
else
    color r "不存在init_function.sh，请检查！"
    exit 1 
fi

# 检查参数合法性
if [ $# -ne 2 ] || [ X"$1" != X"install" ] 
then
    ishelp
    exit 1
fi

if [ X"$2" == X"--all" ]
then
    # 配置环境变量 
    init_configure_env

    # 初始化数据库 
    init_mysql_db
    
    # 初始化配置文件
    init_conig_file

    # 安装系统依赖的软件
    install_sys_env

    # 安装web服务依赖软件
    install_web_env

    # 安装supervisor
    install_supervisor_env
   
    # 安装python3.4
    install_py34
   
    # 安装python项目第三方包
    install_python_env
   
    # 初始化django数据库
    initial_django

    # 开始所有的服务
    start_all_services
fi

if [ X"$2" == X"--with-conf-env" ]
then
    configure_env
    check_to_exit "configure environment variable"
fi

if [ X"$2" == X"--with-mysql-db" ]
then
    configure_env
    check_to_exit "configure environment variable"

    init_mysql_database
    check_to_exit "create mysql database"
fi

if [ X"$2" == X"--with-conf-file" ]
then
    format_config_file
    check_to_exit "format configuration files"
fi

if [ X"$2" == X"--with-sys-env" ]
then
    install_epel
    check_to_exit "install epel"
    
    install_common
    check_to_exit "install system packages"
fi

if [ X"$2" == X"--with-web-env" ]
then
    install_nginx
    check_to_exit "install nginx"

    init_nginx
    check_to_exit "init nginx"
fi

if [ X"$2" == X"--with-supervisor" ]
then
    install_supervisor_env
    check_to_exit "install supervisor"
fi

if [ X"$2" == X"--with-py34" ]
then
    install_py34
    check_to_exit "install python3.4"
fi

if [ X"$2" == X"--with-py-extra" ]
then
    install_python_packages
    check_to_exit "install_python_packages"
    
    install_python_extra_packages
    check_to_exit "install_python_extra_packages"
fi

if [ X"$2" == X"--with-djdb" ]
then
    initial_django_database
    check_to_exit "initial_django_database"
fi

if [ X"$2" == X"--with-start-services" ]
then
    start_all_services
fi

if [ X"$2" == X"--with-update-local" ]
then
    update_local
fi

if [ X"$2" == X"--with-update-remote" ]
then
    tar_local
fi
